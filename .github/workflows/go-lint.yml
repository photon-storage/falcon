name: go-lint

on:
  push:
    branches: [ 'main' ]
  pull_request:
    branches: [ 'main' ]

defaults:
  run:
    # shell default shell to bash for all OS
    shell: bash

jobs:
  go-run-lint:
    name: go-run-lint
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: checkout-code
        uses: actions/checkout@v2

      #- name: goimports-check
      #  id: goimports
      #  uses: Jerome1337/goimports-action@v1.0.2
      #  with:
      #    goimports-path: ./

      #- name: Gosec security scanner
      #  uses: securego/gosec@master
      #  with:
      #    args: './...'

      ##- name: golangci-lint
      ##  uses: golangci/golangci-lint-action@v2
      ##  with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
      ##    version: v1.44

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          # args: --issues-exit-code=0

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true then the action will use pre-installed Go.
          # skip-go-installation: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true
